{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thein\\\\Documents\\\\GitHub\\\\OCR_WebApp\\\\src\\\\Upload.js\";\nimport React, { Component } from 'react';\nimport FileBase64 from 'react-file-base64';\nimport { Button, Form, FormGroup, Label, FormText, Input } from \"reactstrap\";\nimport \"./upload.css\";\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      confirmation: \"\",\n      isLoading: \"\",\n      files: \"\",\n      Invoice: \"\",\n      Amount: \"\",\n      InvoiceDate: \"\",\n      Vendor: \"\",\n      Description: \"\"\n    };\n    this.handleChane = this.handleChane.bind(this);\n  }\n\n  handleChane(event) {\n    event.preventDefault();\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n    this.setState({\n      name: value\n    });\n  }\n\n  async handleSubmit(event) {\n    event.preventDefaulr();\n    this.setState({\n      confirmation: \"Uploading...\"\n    });\n  }\n\n  async getFiles(files) {\n    this.setState({\n      isLoading: \"Extracting data\",\n      files: files\n    });\n    const UID = Math.round(1 + Math.random() * (1000000 - 1));\n    var date = {\n      fileExt: \"png\",\n      imageID: UID,\n      folder: UID,\n      img: this.state.files[0].base64\n    };\n    this.setState({\n      confirmation: \"Processing...\"\n    });\n    await fetch('https://31gv9av7oe.execute-api.us-west-1.amazonaws.com/Production', {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application.json\"\n      },\n      body: JSON.stringify(date)\n    });\n    let targetImage = UID + \".png\";\n    const response = await fetch('https://31gv9av7oe.execute-api.us-west-1.amazonaws.com/Production/ocr', {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application.json\"\n      },\n      body: JSON.stringify(targetImage)\n    });\n    this.setState({\n      confirmation: \"\"\n    });\n    const OCRBody = await response.json();\n    console.log(\"OCRBody\", OCRBody);\n    this.setState({\n      Amount: OCRBody.body[0]\n    });\n    this.setState({\n      Invoice: OCRBody.body[1]\n    });\n    this.setState({\n      InvoiceDate: OCRBody.body[2]\n    });\n  }\n\n  render() {\n    const processing = this.state.confirmation;\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-6 offset-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-danger\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, processing), React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Upload Invoice\"), React.createElement(FormText, {\n      color: \"muted\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"PNG,JPG\"), React.createElement(\"div\", {\n      className: \"form-group files color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(FileBase64, {\n      multiple: true,\n      onDone: this.getFiles.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }))), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Invoice\")), React.createElement(Input, {\n      type: \"text\",\n      name: \"Invoice\",\n      id: \"Invoice\",\n      required: true,\n      value: this.state.Invoice,\n      onChange: this.handleChane,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Amount ($)\")), React.createElement(Input, {\n      type: \"text\",\n      name: \"Amount\",\n      id: \"Amount\",\n      required: true,\n      value: this.state.Amount,\n      onChange: this.handleChane,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, \"Date\")), React.createElement(Input, {\n      type: \"text\",\n      name: \"InvoiceDate\",\n      id: \"InvoiceDate\",\n      required: true,\n      value: this.state.InvoiceDate,\n      onChange: this.handleChane,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, \"Vendor\")), React.createElement(Input, {\n      type: \"text\",\n      name: \"Vendor\",\n      id: \"Vendor\",\n      required: true,\n      value: this.state.Vendor,\n      onChange: this.handleChane,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    })), React.createElement(FormGroup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"h6\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Description\")), React.createElement(Input, {\n      type: \"text\",\n      name: \"Description\",\n      id: \"Description\",\n      required: true,\n      value: this.state.Description,\n      onChange: this.handleChane,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"btn btn-lg btn-block  btn-success\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Submit\"))));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["C:/Users/thein/Documents/GitHub/OCR_WebApp/src/Upload.js"],"names":["React","Component","FileBase64","Button","Form","FormGroup","Label","FormText","Input","Upload","constructor","props","state","confirmation","isLoading","files","Invoice","Amount","InvoiceDate","Vendor","Description","handleChane","bind","event","preventDefault","target","value","name","setState","handleSubmit","preventDefaulr","getFiles","UID","Math","round","random","date","fileExt","imageID","folder","img","base64","fetch","method","headers","Accept","body","JSON","stringify","targetImage","response","OCRBody","json","console","log","render","processing"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FileBase64 from 'react-file-base64';\r\nimport {Button,Form,FormGroup,Label,FormText,Input} from \"reactstrap\";\r\n\r\nimport \"./upload.css\";\r\n\r\n\r\nclass Upload extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n    \r\n    this.state = {\r\n            confirmation : \"\",\r\n            isLoading : \"\",\r\n            files : \"\",\r\n            Invoice : \"\",\r\n            Amount : \"\",\r\n            InvoiceDate: \"\",\r\n            Vendor : \"\",\r\n            Description : \"\"\r\n      }\r\n\r\n    this.handleChane= this.handleChane.bind(this);\r\n    \r\n    }\r\n\r\n\r\n    handleChane(event){\r\n        event.preventDefault();\r\n        const target = event.target;\r\n        const value=target.value;\r\n        const name=target.name;\r\n\r\n        this.setState({name:value});\r\n\r\n    }\r\n\r\n    async handleSubmit(event){\r\n        event.preventDefaulr();\r\n        this.setState({confirmation : \"Uploading...\"});\r\n\r\n    }\r\n\r\n    async getFiles(files){\r\n        this.setState({\r\n            isLoading : \"Extracting data\",\r\n             files : files\r\n    });\r\n\r\n\r\n    const UID= Math.round(1+ Math.random() * (1000000-1));\r\n\r\n    var date={\r\n        fileExt:\"png\",\r\n        imageID: UID,\r\n        folder:UID,\r\n        img : this.state.files[0].base64\r\n    };\r\n\r\n    this.setState({confirmation : \"Processing...\"})\r\n    await fetch(\r\n        'https://31gv9av7oe.execute-api.us-west-1.amazonaws.com/Production',\r\n        {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept : \"application/json\",\r\n            \"Content-Type\": \"application.json\"\r\n        },\r\n        body : JSON.stringify(date)\r\n        }\r\n    );\r\n\r\n\r\n\r\n    let targetImage= UID + \".png\";\r\n    const response=await fetch(\r\n        'https://31gv9av7oe.execute-api.us-west-1.amazonaws.com/Production/ocr',\r\n        {\r\n        method: \"POST\",\r\n        headers: {\r\n            Accept : \"application/json\",\r\n            \"Content-Type\": \"application.json\"\r\n        },\r\n        body : JSON.stringify(targetImage)\r\n       \r\n        }\r\n       \r\n    );\r\n    this.setState({confirmation : \"\"})\r\n\r\n    const OCRBody = await response.json();\r\n    console.log(\"OCRBody\",OCRBody);\r\n\r\n    this.setState({Amount :OCRBody.body[0] })\r\n    this.setState({Invoice :OCRBody.body[1] })\r\n    this.setState({InvoiceDate :OCRBody.body[2] })\r\n\r\n\r\n    }\r\n\r\n    render() { \r\n        const processing=this.state.confirmation;\r\n        return ( \r\n           <div className=\"row\">\r\n               <div className=\"col-6 offset-3\">\r\n                    <Form onSubmit={this.handleSubmit} >\r\n                        <FormGroup>\r\n                           <h3 className=\"text-danger\">{processing}</h3>    \r\n                           <h6>Upload Invoice</h6>\r\n                           <FormText color=\"muted\">PNG,JPG</FormText>\r\n                       \r\n                       \r\n                        <div className=\"form-group files color\">\r\n                            <FileBase64 \r\n                            multiple={true} \r\n                            onDone={this.getFiles.bind(this)}></FileBase64>\r\n\r\n                        </div>\r\n                        </FormGroup>  \r\n\r\n                        <FormGroup>\r\n                            <Label>\r\n                                <h6>Invoice</h6>\r\n                            </Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"Invoice\"\r\n                                id=\"Invoice\"\r\n                                required\r\n                                value={this.state.Invoice}\r\n                                onChange={this.handleChane}\r\n                            />\r\n\r\n                        </FormGroup>\r\n\r\n\r\n                        <FormGroup>\r\n                            <Label>\r\n                                <h6>Amount ($)</h6>\r\n                            </Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"Amount\"\r\n                                id=\"Amount\"\r\n                                required\r\n                                value={this.state.Amount}\r\n                                onChange={this.handleChane}\r\n                            />\r\n                        </FormGroup>\r\n\r\n\r\n\r\n                        <FormGroup>\r\n                            <Label>\r\n                                <h6>Date</h6>\r\n                            </Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"InvoiceDate\"\r\n                                id=\"InvoiceDate\"\r\n                                required\r\n                                value={this.state.InvoiceDate}\r\n                                onChange={this.handleChane}\r\n                            />\r\n                        </FormGroup>\r\n\r\n\r\n                        <FormGroup>\r\n                            <Label>\r\n                                <h6>Vendor</h6>\r\n                            </Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"Vendor\"\r\n                                id=\"Vendor\"\r\n                                required\r\n                                value={this.state.Vendor}\r\n                                onChange={this.handleChane}\r\n                            />\r\n                        </FormGroup>\r\n\r\n                        <FormGroup>\r\n                            <Label>\r\n                                <h6>Description</h6>\r\n                            </Label>\r\n                            <Input \r\n                                type=\"text\"\r\n                                name=\"Description\"\r\n                                id=\"Description\"\r\n                                required\r\n                                value={this.state.Description}\r\n                                onChange={this.handleChane}\r\n                            />\r\n                        </FormGroup>\r\n                        <Button className=\"btn btn-lg btn-block  btn-success\">\r\n                            Submit\r\n                        </Button>\r\n                    </Form>   \r\n                </div>  \r\n           </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Upload;"]},"metadata":{},"sourceType":"module"}