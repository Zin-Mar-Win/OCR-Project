{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\thein\\\\Documents\\\\GitHub\\\\OCR_WebApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\thein\\\\Documents\\\\GitHub\\\\OCR_WebApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\thein\\\\Documents\\\\GitHub\\\\OCR_WebApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\thein\\\\Documents\\\\GitHub\\\\OCR_WebApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\thein\\\\Documents\\\\GitHub\\\\OCR_WebApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\thein\\\\Documents\\\\GitHub\\\\OCR_WebApp\\\\src\\\\react-file-base64.js\";\n\n/*! Copyright (c) 2016 Naufal Rabbani (http://github.com/BosNaufal)\r\n * Licensed Under MIT (http://opensource.org/licenses/MIT)\r\n *\r\n * React File Base64 - Version@1.0.0\r\n *\r\n */\nimport React from \"react\";\n\nvar FileBase64 = /*#__PURE__*/function (_React$Component) {\n  _inherits(FileBase64, _React$Component);\n\n  function FileBase64(props) {\n    var _this;\n\n    _classCallCheck(this, FileBase64);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(FileBase64).call(this, props));\n    _this.state = {\n      files: []\n    };\n    return _this;\n  }\n\n  _createClass(FileBase64, [{\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      var _this2 = this;\n\n      // get the files\n      var files = e.target.files; // Process each file\n\n      var allFiles = [];\n\n      var _loop = function _loop() {\n        var file = files[i]; // Make new FileReader\n\n        var reader = new FileReader(); // Convert the file to base64 text\n\n        reader.readAsDataURL(file); // on reader load somthing...\n\n        reader.onload = function () {\n          // Make a fileInfo Object\n          var fileInfo = {\n            name: file.name,\n            type: file.type,\n            size: Math.round(file.size / 1000) + \" kB\",\n            base64: reader.result,\n            file: file\n          }; // Push it to the state\n\n          allFiles.push(fileInfo); // If all files have been proceed\n\n          if (allFiles.length == files.length) {\n            // Apply Callback function\n            if (_this2.props.multiple) _this2.props.onDone(allFiles);else _this2.props.onDone(allFiles[0]);\n          }\n        }; // reader.onload\n\n      };\n\n      for (var i = 0; i < files.length; i++) {\n        _loop();\n      } // for\n\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.handleChange.bind(this),\n        multiple: this.props.multiple,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return FileBase64;\n}(React.Component);\n\nexport { FileBase64 as default };\nFileBase64.defaultProps = {\n  multiple: false\n};","map":{"version":3,"names":["React","FileBase64","props","state","files","e","target","allFiles","file","i","reader","FileReader","readAsDataURL","onload","fileInfo","name","type","size","Math","round","base64","result","push","length","multiple","onDone","handleChange","bind","Component","defaultProps"],"sources":["C:/Users/thein/Documents/GitHub/OCR_WebApp/src/react-file-base64.js"],"sourcesContent":["/*! Copyright (c) 2016 Naufal Rabbani (http://github.com/BosNaufal)\r\n * Licensed Under MIT (http://opensource.org/licenses/MIT)\r\n *\r\n * React File Base64 - Version@1.0.0\r\n *\r\n */\r\n\r\nimport React from \"react\";\r\n\r\nexport default class FileBase64 extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      files: [],\r\n    };\r\n  }\r\n\r\n  handleChange(e) {\r\n    // get the files\r\n    let files = e.target.files;\r\n\r\n    // Process each file\r\n    var allFiles = [];\r\n    for (var i = 0; i < files.length; i++) {\r\n      let file = files[i];\r\n\r\n      // Make new FileReader\r\n      let reader = new FileReader();\r\n\r\n      // Convert the file to base64 text\r\n      reader.readAsDataURL(file);\r\n\r\n      // on reader load somthing...\r\n      reader.onload = () => {\r\n        // Make a fileInfo Object\r\n        let fileInfo = {\r\n          name: file.name,\r\n          type: file.type,\r\n          size: Math.round(file.size / 1000) + \" kB\",\r\n          base64: reader.result,\r\n          file: file,\r\n        };\r\n\r\n        // Push it to the state\r\n        allFiles.push(fileInfo);\r\n\r\n        // If all files have been proceed\r\n        if (allFiles.length == files.length) {\r\n          // Apply Callback function\r\n          if (this.props.multiple) this.props.onDone(allFiles);\r\n          else this.props.onDone(allFiles[0]);\r\n        }\r\n      }; // reader.onload\r\n    } // for\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <input\r\n        type=\"file\"\r\n        onChange={this.handleChange.bind(this)}\r\n        multiple={this.props.multiple}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nFileBase64.defaultProps = {\r\n  multiple: false,\r\n};\r\n"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,U;;;EACnB,oBAAYC,KAAZ,EAAmB;IAAA;;IAAA;;IACjB,gFAAMA,KAAN;IACA,MAAKC,KAAL,GAAa;MACXC,KAAK,EAAE;IADI,CAAb;IAFiB;EAKlB;;;;iCAEYC,C,EAAG;MAAA;;MACd;MACA,IAAID,KAAK,GAAGC,CAAC,CAACC,MAAF,CAASF,KAArB,CAFc,CAId;;MACA,IAAIG,QAAQ,GAAG,EAAf;;MALc;QAOZ,IAAIC,IAAI,GAAGJ,KAAK,CAACK,CAAD,CAAhB,CAPY,CASZ;;QACA,IAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb,CAVY,CAYZ;;QACAD,MAAM,CAACE,aAAP,CAAqBJ,IAArB,EAbY,CAeZ;;QACAE,MAAM,CAACG,MAAP,GAAgB,YAAM;UACpB;UACA,IAAIC,QAAQ,GAAG;YACbC,IAAI,EAAEP,IAAI,CAACO,IADE;YAEbC,IAAI,EAAER,IAAI,CAACQ,IAFE;YAGbC,IAAI,EAAEC,IAAI,CAACC,KAAL,CAAWX,IAAI,CAACS,IAAL,GAAY,IAAvB,IAA+B,KAHxB;YAIbG,MAAM,EAAEV,MAAM,CAACW,MAJF;YAKbb,IAAI,EAAEA;UALO,CAAf,CAFoB,CAUpB;;UACAD,QAAQ,CAACe,IAAT,CAAcR,QAAd,EAXoB,CAapB;;UACA,IAAIP,QAAQ,CAACgB,MAAT,IAAmBnB,KAAK,CAACmB,MAA7B,EAAqC;YACnC;YACA,IAAI,MAAI,CAACrB,KAAL,CAAWsB,QAAf,EAAyB,MAAI,CAACtB,KAAL,CAAWuB,MAAX,CAAkBlB,QAAlB,EAAzB,KACK,MAAI,CAACL,KAAL,CAAWuB,MAAX,CAAkBlB,QAAQ,CAAC,CAAD,CAA1B;UACN;QACF,CAnBD,CAhBY,CAmCT;;MAnCS;;MAMd,KAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,KAAK,CAACmB,MAA1B,EAAkCd,CAAC,EAAnC,EAAuC;QAAA;MA8BtC,CApCa,CAoCZ;;IACH;;;6BAEQ;MACP,oBACE;QACE,IAAI,EAAC,MADP;QAEE,QAAQ,EAAE,KAAKiB,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAFZ;QAGE,QAAQ,EAAE,KAAKzB,KAAL,CAAWsB,QAHvB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADF;IAOD;;;;EAvDqCxB,KAAK,CAAC4B,S;;SAAzB3B,U;AA0DrBA,UAAU,CAAC4B,YAAX,GAA0B;EACxBL,QAAQ,EAAE;AADc,CAA1B"},"metadata":{},"sourceType":"module"}